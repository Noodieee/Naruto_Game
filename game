import pygame
pygame.init()

win=pygame.display.set_mode((700,500))
pygame.display.set_caption("Naruto vs Sasuke")

walkRight = [pygame.image.load('pics\\NR2.PNG'),pygame.image.load('pics\\NR3.PNG'),pygame.image.load('pics\\NR1.PNG')]
walkLeft = [pygame.image.load('pics\\NR2.PNG'),pygame.image.load('pics\\NR3.PNG'),pygame.image.load('pics\\NR1.PNG')]

bg = pygame.image.load('pics\\bg.png')
stan = pygame.image.load('pics\\Nstanding.png')

Clock = pygame.time.Clock()


x=50
y=400
width=40
height=60
speed=6
isjump=False # if it is jumping

jumpheight=10

left=False
right=False
walkcount=0

run=True

def redrawgamewindow():
    global left
    global right
    global walkcount
    win.blit(bg,(0,0))

    if walkcount + 1 > 6:
        walkcount = 0

    if left and isjump == False:   
        win.blit(walkLeft[walkcount//2], (x,y))
        walkCount +=1

    elif right and isjump == False:
        win.blit(walkRight[walkcount//2], (x,y))
        walkCount =1

    elif right and isjump:
        win.blit(walkRight[2],(x,y))

    elif left and isjump:
        win.blit(walkLeft[2],(x,y))  

    elif not(isjump):
        win.blit(stan,(x,y))

    pygame.display.update()    



while run:

    ########## FRAME RATE ##########
    pygame.time.delay(60)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    ########## KEYS ##########        

    keys=pygame.key.get_pressed()

    ########## LEFT ##########
    if keys[pygame.K_LEFT] and x > speed:
        x -= speed
        left = True
        right = False

    ########## RIGHT #################    
    if keys[pygame.K_RIGHT] and x < 690 - width - speed:
        x += speed
        left = False
        right = True

    else:
        left = False
        right = False
        walkCount = 0
    
    ########## JUMP ##########
    if isjump == False:
         if keys[pygame.K_SPACE]:
             isjump = True
             left = False
             right = False
             walkCount = 0

    else:
        if jumpheight >= -10:
            neg = 1

            if jumpheight < 0:
                neg =-1 

            y -= (jumpheight **2)* 0.5* neg
            jumpheight -=1

                              
        else:

            isjump = False 
            jumpheight = 10


    redrawgamewindow()

pygame.quit()